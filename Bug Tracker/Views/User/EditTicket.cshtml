@using Bug_Tracker.Models;
@model Tuple<List<Ticket>, List<User>, List<Project>>
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Edit Ticket</title>

    <!-- Custom fonts for this template-->
    <link href="~/Content/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="~/Content/css/sb-admin-2.min.css" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

    <!-- Custom styles for this page -->
    <link href="~/Content/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">

    <script src="https://code.jquery.com/jquery-3.3.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
</head>

<body id="page-top">

    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Sidebar -->
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

            <!-- Sidebar - Brand -->
            <li>
                <a class="sidebar-brand d-flex align-items-center justify-content-center" href="@Url.Action("Dashboard", null, new { area = string.Empty, controller = "User" }, Request.Url.Scheme)">
                    <div class="sidebar-brand-icon rotate-n-15">
                        <i class="fas fa-bug"></i>
                    </div>
                    <div class="sidebar-brand-text mx-3">Bug Tracker</div>
                </a>
            </li>

            <!-- Divider -->
            <li>
                <hr class="sidebar-divider my-0">
            </li>

            <!-- Nav Item - Dashboard -->
            <li class="nav-item">
                <a class="nav-link" href="@Url.Action("Dashboard", null, new { area = string.Empty, controller = "User" }, Request.Url.Scheme)">
                    <i class="fas fa-fw fa-tachometer-alt"></i>
                    <span>Dashboard</span>
                </a>
            </li>

            <!-- Divider -->
            <li>
                <hr class="sidebar-divider">
            </li>

            <!-- Heading -->
            <li>
                <div class="sidebar-heading">
                    Restricted Pages
                </div>
            </li>
            <!-- Nav Item - Pages Collapse Menu -->
            <li class="nav-item">
                <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo">
                    <i class="fas fa-fw fa-cog"></i>
                    <span>Admin</span>
                </a>
                <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
                    <div class="bg-white py-2 collapse-inner rounded">
                        <h6 class="collapse-header">Admin Pages:</h6>
                        <a class="collapse-item" href="@Url.Action("ManageRoleProject", null, new { area = string.Empty, controller = "User" }, Request.Url.Scheme)">
                            Manage Role
                            <br>
                            <small class="form-text text-muted">Change User Role/Status</small>
                        </a>
                        <a class="collapse-item" href="@Url.Action("ManageUser", null, new { area = string.Empty, controller = "User" }, Request.Url.Scheme)">
                            Manage User
                            <br>
                            <small class="form-text text-muted">Invite or Remove User</small>
                        </a>
                    </div>
                </div>
            </li>

            <!-- Divider -->
            <li>
                <hr class="sidebar-divider">
            </li>

            <!-- Heading -->
            <li>
                <div class="sidebar-heading">
                    User Pages
                </div>
            </li>

            <!-- Nav Item - Projects -->
            <li class="nav-item">
                <a class="nav-link" href="@Url.Action("Project", null, new { area = string.Empty, controller = "User" }, Request.Url.Scheme)">
                    <i class="fas fa-fw fa-chart-area"></i>
                    <span>My Projects</span>
                </a>
            </li>

            <!-- Nav Item - Tickets -->
            <li class="nav-item">
                <a class="nav-link" href="@Url.Action("Tickets", null, new { area = string.Empty, controller = "User" }, Request.Url.Scheme)">
                    <i class="fas fa-fw fa-table"></i>
                    <span>My Tickets</span>
                </a>
            </li>

            @if (HttpContext.Current.Session["ID"].ToString() != "Guest")
            {
                <!-- Nav Item - Profile -->
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("UserProfile", null, new { area = string.Empty, controller = "User" }, Request.Url.Scheme)">
                        <i class="fas fa-user-tie"></i>
                        <span>Profile</span>
                    </a>
                </li>
            }

            <!-- Divider -->
            <li>
                <hr class="sidebar-divider d-none d-md-block">
            </li>
            <!-- Sidebar Toggler (Sidebar) -->
            <li class="text-center d-none d-md-inline">
                <button class="rounded-circle border-0" id="sidebarToggle"></button>
            </li>
        </ul>
        <!-- End of Sidebar -->
        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

                    <!-- Sidebar Toggle (Topbar) -->
                    <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                        <i class="fa fa-bars"></i>
                    </button>

                    <!-- Topbar Navbar -->
                    <ul class="navbar-nav ml-auto">
                        <!-- Nav Item - Messages -->
                        @if (HttpContext.Current.Session["ID"].ToString() != "Guest")
                        {
                            <li class="nav-item dropdown no-arrow mx-1">
                                <a class="nav-link dropdown-toggle" href="#" id="messagesDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fas fa-envelope fa-fw"></i>
                                    <!-- Counter - Messages -->
                                    @{if (HttpContext.Current.Session["MessageList"] != null)
                                        {
                                            List<Bug_Tracker.Models.Message> messages = HttpContext.Current.Session["MessageList"] as List<Bug_Tracker.Models.Message>;

                                            <span class="badge badge-danger badge-counter">
                                                @messages.Count
                                            </span>
                                        }
                                    }
                                </a>
                                <!-- Dropdown - Messages -->
                                <div class="dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in" aria-labelledby="messagesDropdown">
                                    <h6 class="dropdown-header">
                                        Message
                                    </h6>
                                    @{if (HttpContext.Current.Session["MessageList"] != null)
                                        {
                                            //https://stackoverflow.com/questions/8194238/how-to-retrieve-a-generic-list-from-session
                                            List<Bug_Tracker.Models.Message> messages = HttpContext.Current.Session["MessageList"] as List<Bug_Tracker.Models.Message>;
                                            int condition = 5; //Default Message Size Shown on Screen is 5
                                            if (messages != null)
                                            {
                                                if (messages.Count < 5)
                                                {
                                                    condition = messages.Count;
                                                }

                                                for (int i = 0; i < condition; i++)
                                                {
                                                    <a class="dropdown-item d-flex align-items-center" href="~/User/Message">
                                                        <div class="font-weight-bold">
                                                            <div class="text-truncate">Sender: @messages[i].Sender</div>
                                                            <div class="small text-gray-500">Subject: @messages[i].Subject</div>
                                                            <div class="small text-gray-500">Message: @messages[i].Content</div>
                                                        </div>
                                                    </a>
                                                }
                                            }

                                        }
                                    }
                                    <a class="dropdown-item text-center small text-gray-500" href="~/User/Message">Read More Messages</a>
                                    <a class="dropdown-item text-center small text-gray-500" href="~/User/SendMessage">Send a Message</a>
                                </div>
                            </li>
                        }

                        <!-- Nav Item - User Information -->
                        <li class="nav-item dropdown no-arrow">
                            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="mr-2 d-none d-lg-inline text-gray-600 small">
                                    @if (HttpContext.Current.Session["Username"] != null)
                                    {
                                        @HttpContext.Current.Session["Username"].ToString()
                                    }
                                </span>
                                <img class="img-profile rounded-circle" src="~/Content/img/profile.png">
                            </a>
                            <!-- Dropdown - User Information -->
                            <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in" aria-labelledby="userDropdown">
                                @if (HttpContext.Current.Session["ID"].ToString() != "Guest")
                                {
                                    <a class="dropdown-item" href="@Url.Action("UserProfile", null, new { area = string.Empty, controller = "User" }, Request.Url.Scheme)">
                                        <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                                        Profile
                                    </a>
                                    <div class="dropdown-divider"></div>
                                }
                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#logoutModal">
                                    <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Logout
                                </a>
                            </div>
                        </li>

                    </ul>

                </nav>
                <!-- End of Topbar -->
                <!-- Begin Page Content -->
                <div class="container-fluid">
                    <!-- Page Heading -->
                    <h1 class="h3 mb-4 text-gray-800">Edit Ticket</h1>
                    @{
                        var parameter = Request.QueryString["message"];
                        //Check parameter here and display Message
                        if (parameter == "TicketDetails")
                        {
                            <div class="alert alert-success alert-dismissable">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Ticket Details has been successfully updated</strong>
                            </div>
                        }
                        if (parameter == "EditComment")
                        {
                            <div class="alert alert-success alert-dismissable">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> A Comment has been successfully updated</strong>
                            </div>
                        }
                        if (parameter == "DeleteComment")
                        {
                            <div class="alert alert-success alert-dismissable">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> A Comment has been successfully deleted</strong>
                            </div>
                        }
                        if (parameter == "EditAttachment")
                        {
                            <div class="alert alert-success alert-dismissable">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> An Attachment has been successfully updated</strong>
                            </div>
                        }
                        if (parameter == "DeleteAttachment")
                        {
                            <div class="alert alert-success alert-dismissable">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> An Attachment has been successfully deleted</strong>
                            </div>
                        }
                        if (parameter == "DeleteHistory")
                        {
                            <div class="alert alert-success alert-dismissable">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> A Ticket History has been successfully deleted</strong>
                            </div>
                        }
                        if (parameter == "TicketClosed")
                        {
                            <div class="alert alert-success alert-dismissable">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This ticket has been closed. To reopen, you will need a manager to perform the reopen action</strong>
                            </div>
                        }
                        if (parameter == "TicketReopen")
                        {
                            <div class="alert alert-success alert-dismissable">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> This ticket has been reopened</strong>
                            </div>
                        }
                        if (parameter == "error")
                        {
                            <div class="alert alert-danger alert-dismissable">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                <strong><i class="fa fa-exclamation-triangle" aria-hidden="true"></i> An error has occured</strong>
                            </div>
                        }
                    }
                    <div class="card">
                        <div class="card-header">
                            @foreach (var item in Model.Item1)
                            {
                                <h6 class="m-0 font-weight-bold text-primary">Edit Ticket: @Html.DisplayFor(modelItem => item.details.ticketTitle)</h6>
                                <button type="button" style="float:right;" class="btn btn-primary" data-toggle="modal" data-target="#info">Status Requirements Information</button>
                                <div class="modal fade" id="info" tabindex="-1" role="dialog" aria-labelledby="info" aria-hidden="true">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="info">Status Requirements to access certain links on this project page</h5>
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="modal-body">
                                                <small class="form-text text-muted">To Edit Detail: <b>Manager, Admin, Original Uploader, Assigned Developer</b></small>
                                                <small class="form-text text-muted">To Edit Comment, Attachment: <b>Manager, Admin, Original Uploader</b></small>
                                                <small class="form-text text-muted">To Delete Comment, Attachment: <b>Manager, Admin, Original Uploader</b>  <br></small>
                                                <small class="form-text text-muted">To Delete History: <b>Manager</b></small>
                                                <small class="form-text text-muted">To Close Ticket: <b>Manager, Admin</b></small>
                                                <small class="form-text text-muted">To Reopen Ticket: <b>Manager</b></small>
                                                <small class="form-text text-muted">Note: Only Manager/Admin can assign Developers, Ticket Priority, Ticket Status</small>
                                                <small class="form-text text-muted">Note: Closing Tickets prevent it from being edited</small>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <h6>This page allows you to edit/delete the ticket's information</h6>
                                <p style="margin:0px">
                                    @Html.ActionLink("Back to Ticket List", "Tickets") |
                                    @Html.ActionLink("Back to Ticket Details", "TicketDetails", new { id = item._id })
                                </p>
                            }
                            <hr>
                            <!--Nav-->
                            <nav>
                                <div class="nav nav-tabs" id="nav-tab" role="tablist">
                                    <a class="nav-item nav-link active" id="nav-home-tab" data-toggle="tab" href="#nav-details" role="tab" aria-controls="nav-details" aria-selected="true">Details</a>
                                    <a class="nav-item nav-link" id="nav-profile-tab" data-toggle="tab" href="#nav-comments" role="tab" aria-controls="nav-comments" aria-selected="false">Comments</a>
                                    <a class="nav-item nav-link" id="nav-contact-tab" data-toggle="tab" href="#nav-attachments" role="tab" aria-controls="nav-attachments" aria-selected="false">Attachments</a>
                                    <a class="nav-item nav-link" id="nav-contact-tab" data-toggle="tab" href="#nav-histories" role="tab" aria-controls="nav-histories" aria-selected="false">Histories</a>
                                </div>
                            </nav>
                            <!--Nav-->
                        </div>
                        <!--Details-->
                        <div class="tab-content" id="nav-tabContent">
                            <div class="tab-pane fade show active" id="nav-details" role="tabpanel" aria-labelledby="nav-home-tab">
                                <div class="card-body">
                                    @foreach (var item in Model.Item1)
                                    {

                                        //If Ticket is closed--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                        if (item.details.ticketStatus.ToString() == "Closed")
                                        {
                                            using (Html.BeginForm("Reopen", "User", FormMethod.Post))
                                            {
                                                <div class="form-group">
                                                    <label for="ticketTitle">Ticket Title</label>
                                                    @Html.EditorFor(model => item.details.ticketTitle, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                                </div>

                                                <div class="form-group">
                                                    <label for="ticketDescription">Ticket Description</label>
                                                    @Html.TextAreaFor(model => item.details.ticketDescription, new { @class = "form-control", @style = "height:300px", @readonly = "true" })
                                                    <small class="form-text text-muted">e.g: Description, Summary, Steps to Reproduce Issue</small>
                                                </div>

                                                <div class="form-group">
                                                    <label for="assignedDeveloper">Assign Developer</label>
                                                    <select name="assignedDeveloper" class="form-control" style="width:220px" disabled="disabled">
                                                        <option value="None">None</option>
                                                        @foreach (var user in Model.Item2)
                                                        {
                                                            <option value="@Html.DisplayFor(modelItem => user._id)">@Html.DisplayFor(modelItem => user.Username)</option>
                                                        }
                                                    </select>
                                                </div>

                                                <div class="form-group">
                                                    <label for="ticketTitle">Ticket Priority</label>
                                                    @Html.DropDownList("ticketPriority", new List<SelectListItem>
                                                    {
                                                        new SelectListItem { Text = "None", Value = "None", Selected=true},
                                                        new SelectListItem { Text = "Low", Value = "Low"},
                                                        new SelectListItem { Text = "Medium", Value = "Medium"},
                                                        new SelectListItem { Text = "High", Value = "High"},
                                                        new SelectListItem { Text = "Urgent", Value = "Urgent"},
                                                        new SelectListItem { Text = "Immediate", Value = "Immediate"},
                                                    }, new { @class = "form-control", @style = "width:220px", @disabled = "disabled" })
                                                </div>

                                                <div class="form-group">
                                                    <label for="ticketTitle">Ticket Status</label>
                                                    @if (HttpContext.Current.Session["AdminStatus"].ToString() == "Manager")
                                                    {
                                                        @Html.DropDownList("ticketStatus", new List<SelectListItem>
                                                        {
                                                            new SelectListItem { Text = "None", Value = "None", Selected=true},
                                                            new SelectListItem { Text = "Open", Value = "Open"},
                                                            new SelectListItem { Text = "In Progress", Value = "In Progress"},
                                                            new SelectListItem { Text = "Additional Info Required", Value = "Additional Info Required"},
                                                            new SelectListItem { Text = "Resolved", Value = "Resolved"},
                                                            new SelectListItem { Text = "Closed", Value = "Closed"},
                                                        }, new { @class = "form-control", @style = "width:220px" })
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownList("ticketStatus", new List<SelectListItem>
                                                        {
                                                            new SelectListItem { Text = "None", Value = "None", Selected=true},
                                                            new SelectListItem { Text = "Open", Value = "Open"},
                                                            new SelectListItem { Text = "In Progress", Value = "In Progress"},
                                                            new SelectListItem { Text = "Additional Info Required", Value = "Additional Info Required"},
                                                            new SelectListItem { Text = "Resolved", Value = "Resolved"},
                                                            new SelectListItem { Text = "Closed", Value = "Closed"},
                                                        }, new { @class = "form-control", @style = "width:220px", @disabled = "true" })
                                                    }
                                                </div>

                                                <div class="form-group">
                                                    <label for="ticketTitle">Ticket Type</label>
                                                    @Html.EditorFor(modelItem => item.details.ticketType, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                                    <small class="form-text text-muted">e.g: Bugs/Error, Feature Requests</small>
                                                </div>

                                                <div class="form-group" style="display:none">
                                                    @Html.Hidden("TicketID", item._id);
                                                </div>
                                                if (HttpContext.Current.Session["AdminStatus"].ToString() == "Manager")
                                                {
                                                    <button type="submit" class="btn btn-primary">Submit</button>
                                                }
                                                else
                                                {
                                                    <button type="submit" class="btn btn-primary" disabled>Submit</button>
                                                }
                                            }
                                        }
                                        //--------------------------------------------------------------------------------------------------------------------------------------------------------------------------If Ticket is closed
                                        else
                                        {
                                            using (Html.BeginForm("EditTicket", "User", FormMethod.Post))
                                            {
                                                //If Ticket is not closed--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                if (HttpContext.Current.Session["AdminStatus"].ToString() == "Manager" || HttpContext.Current.Session["AdminStatus"].ToString() == "Admin" || HttpContext.Current.Session["ID"].ToString() == item.details.submitterID || HttpContext.Current.Session["ID"].ToString() == item.details.devID)//If Manager, admin, submitter, or assigned dev
                                                {
                                                    <div class="form-group">
                                                        <label for="ticketTitle">Ticket Title</label>
                                                        @Html.EditorFor(model => item.details.ticketTitle, new { htmlAttributes = new { @class = "form-control" } })
                                                    </div>

                                                    <div class="form-group">
                                                        <label for="ticketDescription">Ticket Description</label>
                                                        @Html.TextAreaFor(model => item.details.ticketDescription, new { @class = "form-control", @style = "height:300px" })
                                                        <small class="form-text text-muted">e.g: Description, Summary, Steps to Reproduce Issue</small>
                                                    </div>


                                                    if (HttpContext.Current.Session["AdminStatus"].ToString() == "Manager" || HttpContext.Current.Session["AdminStatus"].ToString() == "Admin")
                                                    {
                                                        //Restrict Assign Dev, Ticket Priority, Ticket Status to Manager, Admin
                                                        <div class="form-group">
                                                            <label for="assignedDeveloper">Assign Developer</label>
                                                            <select name="assignedDeveloper" class="form-control" style="width:220px">
                                                                <option value="None">None</option>
                                                                @foreach (var project in Model.Item3)
                                                                {
                                                                    foreach (var user in Model.Item2)
                                                                    {
                                                                        for (int i = 0; i < user.AdminStatus.Count; i++)
                                                                        {
                                                                            if (project._id.ToString() == user.AdminStatus[i].ProjectID && user.AdminStatus[i].Status != "Submitter")
                                                                            {
                                                                                <option value="@Html.DisplayFor(modelItem => user._id)">@Html.DisplayFor(modelItem => user.Username)</option>
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            </select>
                                                            <small class="form-text text-muted">Note: Submitters are excluded from being assigned, but Managers, Admins, and Developers can be assigned</small>
                                                        </div>
                                                        <div class="form-group">
                                                            <label for="ticketTitle">Ticket Priority</label>
                                                            @Html.DropDownList("ticketPriority", new List<SelectListItem>
                                                                {
                                                                    new SelectListItem { Text = "None", Value = "None", Selected=true},
                                                                    new SelectListItem { Text = "Low", Value = "Low"},
                                                                    new SelectListItem { Text = "Medium", Value = "Medium"},
                                                                    new SelectListItem { Text = "High", Value = "High"},
                                                                    new SelectListItem { Text = "Urgent", Value = "Urgent"},
                                                                    new SelectListItem { Text = "Immediate", Value = "Immediate"},
                                                                }, new { @class = "form-control", @style = "width:200px" })
                                                        </div>
                                                        <div class="form-group">
                                                            <label for="ticketTitle">Ticket Status</label>
                                                            @Html.DropDownList("ticketStatus", new List<SelectListItem>
                                                                {
                                                                    new SelectListItem { Text = "None", Value = "None", Selected=true},
                                                                    new SelectListItem { Text = "Open", Value = "Open"},
                                                                    new SelectListItem { Text = "In Progress", Value = "In Progress"},
                                                                    new SelectListItem { Text = "Additional Info Required", Value = "Additional Info Required"},
                                                                    new SelectListItem { Text = "Resolved", Value = "Resolved"},
                                                                    new SelectListItem { Text = "Closed", Value = "Closed"},
                                                                }, new { @class = "form-control", @style = "width:200px" })
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        //If Sumbitter---------------------------------------------------------------------------------------------------------------
                                                        <div class="form-group">
                                                            <label for="assignedDeveloper">Assign Developer</label>
                                                            <select name="assignedDeveloper" class="form-control" style="width:220px" disabled="disabled">
                                                                <option value="None">None</option>
                                                                @foreach (var user in Model.Item2)
                                                                {
                                                                    <option value="@Html.DisplayFor(modelItem => user._id)">@Html.DisplayFor(modelItem => user.Username)</option>
                                                                }
                                                            </select>
                                                        </div>
                                                        <div class="form-group">
                                                            <label for="ticketTitle">Ticket Priority</label>
                                                            @Html.DropDownList("ticketPriority", new List<SelectListItem>
                                                            {
                                                                new SelectListItem { Text = "None", Value = "None", Selected=true},
                                                                new SelectListItem { Text = "Low", Value = "Low"},
                                                                new SelectListItem { Text = "Medium", Value = "Medium"},
                                                                new SelectListItem { Text = "High", Value = "High"},
                                                                new SelectListItem { Text = "Urgent", Value = "Urgent"},
                                                                new SelectListItem { Text = "Immediate", Value = "Immediate"},
                                                            }, new { @class = "form-control", @style = "width:220px", @disabled = "disabled" })
                                                        </div>

                                                        <div class="form-group">
                                                            <label for="ticketTitle">Ticket Status</label>
                                                            @Html.DropDownList("ticketStatus", new List<SelectListItem>
                                                            {
                                                                new SelectListItem { Text = "None", Value = "None", Selected=true},
                                                                new SelectListItem { Text = "Open", Value = "Open"},
                                                                new SelectListItem { Text = "In Progress", Value = "In Progress"},
                                                                new SelectListItem { Text = "Additional Info Required", Value = "Additional Info Required"},
                                                                new SelectListItem { Text = "Resolved", Value = "Resolved"},
                                                                new SelectListItem { Text = "Closed", Value = "Closed"},
                                                            }, new { @class = "form-control", @style = "width:220px", @disabled = "true" })
                                                        </div>

                                                        @Html.Hidden("assignedDeveloper", item.details.devID);
                                                        @Html.Hidden("ticketPriority", item.details.ticketPriority);
                                                        @Html.Hidden("ticketStatus", item.details.ticketStatus);
                                                    }
                                                    <div class="form-group">
                                                        <label for="ticketTitle">Ticket Type</label>
                                                        @Html.EditorFor(modelItem => item.details.ticketType, new { htmlAttributes = new { @class = "form-control" } })
                                                        <small class="form-text text-muted">e.g: Bugs/Error, Feature Requests</small>
                                                    </div>

                                                    <div class="form-group" style="display:none">
                                                        @Html.Hidden("TicketID", item._id);
                                                    </div>

                                                    <button type="submit" class="btn btn-primary">Submit</button>
                                                    //If Sumbitter---------------------------------------------------------------------------------------------------------------
                                                }
                                                else
                                                {
                                                    //If Developer---------------------------------------------------------------------------------------------------------------
                                                    <div class="form-group">
                                                        <label for="ticketTitle">Ticket Title</label>
                                                        @Html.EditorFor(model => item.details.ticketTitle, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                                    </div>

                                                    <div class="form-group">
                                                        <label for="ticketDescription">Ticket Description</label>
                                                        @Html.TextAreaFor(model => item.details.ticketDescription, new { @class = "form-control", @style = "height:300px", @readonly = "true" })
                                                        <small class="form-text text-muted">e.g: Description, Summary, Steps to Reproduce Issue</small>
                                                    </div>

                                                    <div class="form-group">
                                                        <label for="assignedDeveloper">Assign Developer</label>
                                                        <select name="assignedDeveloper" class="form-control" style="width:220px" disabled="disabled">
                                                            <option value="None">None</option>
                                                            @foreach (var user in Model.Item2)
                                                            {
                                                                <option value="@Html.DisplayFor(modelItem => user._id)">@Html.DisplayFor(modelItem => user.Username)</option>
                                                            }
                                                        </select>
                                                    </div>

                                                    <div class="form-group">
                                                        <label for="ticketTitle">Ticket Priority</label>
                                                        @Html.DropDownList("ticketPriority", new List<SelectListItem>
                                                        {
                                                            new SelectListItem { Text = "None", Value = "None", Selected=true},
                                                            new SelectListItem { Text = "Low", Value = "Low"},
                                                            new SelectListItem { Text = "Medium", Value = "Medium"},
                                                            new SelectListItem { Text = "High", Value = "High"},
                                                            new SelectListItem { Text = "Urgent", Value = "Urgent"},
                                                            new SelectListItem { Text = "Immediate", Value = "Immediate"},
                                                        }, new { @class = "form-control", @style = "width:220px", @disabled = "disabled" })
                                                    </div>

                                                    <div class="form-group">
                                                        <label for="ticketTitle">Ticket Status</label>
                                                        @Html.DropDownList("ticketStatus", new List<SelectListItem>
                                                        {
                                                            new SelectListItem { Text = "None", Value = "None", Selected=true},
                                                            new SelectListItem { Text = "Open", Value = "Open"},
                                                            new SelectListItem { Text = "In Progress", Value = "In Progress"},
                                                            new SelectListItem { Text = "Additional Info Required", Value = "Additional Info Required"},
                                                            new SelectListItem { Text = "Resolved", Value = "Resolved"},
                                                            new SelectListItem { Text = "Closed", Value = "Closed"},
                                                        }, new { @class = "form-control", @style = "width:220px", @disabled = "true" })
                                                    </div>

                                                    <div class="form-group">
                                                        <label for="ticketTitle">Ticket Type</label>
                                                        @Html.EditorFor(modelItem => item.details.ticketType, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                                        <small class="form-text text-muted">e.g: Bugs/Error, Feature Requests</small>
                                                    </div>

                                                    <div class="form-group" style="display:none">
                                                        @Html.Hidden("TicketID", item._id);
                                                    </div>

                                                    <button type="submit" class="btn btn-primary" disabled>Submit</button>
                                                }
                                                //If Developer---------------------------------------------------------------------------------------------------------------

                                                //If Ticket is not closed--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                            }
                                        }
                                    }
                                </div>
                            </div>
                            <!--Comments-->
                            <div class="tab-pane fade" id="nav-comments" role="tabpanel" aria-labelledby="nav-profile-tab">
                                <div class="card shadow mb-4" style="margin-left:10px;">
                                    <div class="card-header py-3">
                                        <h6 class="m-0 font-weight-bold text-primary">Comments</h6>
                                        <h6>All the Comments in this Ticket</h6>
                                    </div>

                                    <div class="card-body">
                                        <div class="table-responsive" max-width="100%">
                                            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                                <thead>
                                                    <tr>
                                                        <th>Commenter</th>
                                                        <th>Comment</th>
                                                        <th>Created</th>
                                                        <th>Edit</th>
                                                        <th>Delete</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in Model.Item1)
                                                    {
                                                        for (int j = 0; j < item.comments.Count; j++)
                                                        {
                                                            <tr>
                                                                <td>@Html.DisplayFor(modelItem => item.comments[j].commenter)</td>
                                                                <td>@Html.DisplayFor(modelItem => item.comments[j].comment)</td>
                                                                <td>@Html.DisplayFor(modelItem => item.comments[j].created)</td>
                                                                @if (item.details.ticketStatus.ToString() == "Closed")
                                                                {
                                                                    <td><button type="button" class="btn btn-primary" disabled>Unable to Edit</button></td>
                                                                    <td><button type="button" class="btn btn-danger" disabled>Unable to Delete</button></td>
                                                                }
                                                                else
                                                                {
                                                                    if (HttpContext.Current.Session["AdminStatus"].ToString() == "Manager" || HttpContext.Current.Session["AdminStatus"].ToString() == "Admin" || HttpContext.Current.Session["ID"].ToString() == item.comments[j].commenterID.ToString())
                                                                    {
                                                                        <td>
                                                                            <button type="button" style="float:left; overflow:hidden" class="btn btn-primary" data-toggle="modal" data-target="#@("Edit" + item.comments[j]._id)">Edit Comment</button>
                                                                            @using (Html.BeginForm("EditComment", "User", FormMethod.Post))
                                                                            {
                                                                                <div class="modal fade" id="@("Edit" + item.comments[j]._id)" tabindex="-1" role="dialog" aria-labelledby="EditComment" aria-hidden="true">
                                                                                    <div class="modal-dialog" role="document">
                                                                                        <div class="modal-content">
                                                                                            <div class="modal-header">
                                                                                                <h5 class="modal-title" id="exampleModalLabel">Edit Comment</h5>
                                                                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                                                    <span aria-hidden="true">&times;</span>
                                                                                                </button>
                                                                                            </div>
                                                                                            <div class="modal-body">
                                                                                                <p>Enter the comment changes below:</p>
                                                                                                @Html.TextArea("commentText", item.comments[j].comment, new { @class = "form-control" })
                                                                                                @Html.Hidden("TicketID", item._id)
                                                                                                @Html.Hidden("commentID", item.comments[j]._id)
                                                                                            </div>
                                                                                            <div class="modal-footer">
                                                                                                <button type="submit" style="line-height: 1;" class="btn btn-primary">Update</button>
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            }
                                                                        </td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td><button type="button" class="btn btn-primary" disabled>Unable to Edit</button></td>
                                                                    }
                                                                    if (HttpContext.Current.Session["AdminStatus"].ToString() == "Manager" || HttpContext.Current.Session["AdminStatus"].ToString() == "Admin" || HttpContext.Current.Session["ID"].ToString() == item.comments[j].commenterID.ToString())
                                                                    {
                                                                        <td>
                                                                            <button type="button" style="float:left; overflow:hidden" class="btn btn-danger" data-toggle="modal" data-target="#@("Delete" + item.comments[j]._id)">Delete Comment</button>
                                                                            @using (Html.BeginForm("DeleteComment", "User", FormMethod.Post))
                                                                            {
                                                                                <div class="modal fade" id="@("Delete" + item.comments[j]._id)" tabindex="-1" role="dialog" aria-labelledby="DeleteComment" aria-hidden="true">
                                                                                    <div class="modal-dialog" role="document">
                                                                                        <div class="modal-content">
                                                                                            <div class="modal-header">
                                                                                                <h5 class="modal-title" id="exampleModalLabel">Delete Comment</h5>
                                                                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                                                    <span aria-hidden="true">&times;</span>
                                                                                                </button>
                                                                                            </div>
                                                                                            <div class="modal-body">
                                                                                                Are you sure you want to delete this comment? This action will delete the comment permanently.
                                                                                                @Html.Hidden("TicketID", item._id)
                                                                                                @Html.Hidden("commentID", item.comments[j]._id)
                                                                                            </div>
                                                                                            <div class="modal-footer">
                                                                                                <button type="submit" style="line-height: 1;" class="btn btn-primary">Delete</button>
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            }
                                                                        </td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td><button type="button" class="btn btn-danger" disabled>Unable to Delete</button></td>
                                                                    }
                                                                }
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="nav-attachments" role="tabpanel" aria-labelledby="nav-contact-tab">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary">Ticket Attachment(s)</h6>
                                    <h6>All files/pictures associated to this ticket</h6>
                                </div>

                                <div class="card-body">
                                    <div class="table-responsive" max-width="100%">
                                        <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                            <thead>
                                                <tr>
                                                    <th>Uploader</th>
                                                    <th>File</th>
                                                    <th>Note</th>
                                                    <th>Created</th>
                                                    <th>Edit</th>
                                                    <th>Delete</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.Item1)
                                                {
                                                    for (int j = 0; j < item.attachments.Count; j++)
                                                    {
                                                        <tr>
                                                            <td>@Html.DisplayFor(modelItem => item.attachments[j].uploader)</td>
                                                            <td>
                                                                <!-- Button trigger modal -->
                                                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#@("ID" + item.attachments[j].pictureID)">
                                                                    View Image
                                                                </button>

                                                                <!-- Modal -->
                                                                <div class="modal fade" id="@("ID" + item.attachments[j].pictureID)" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                                                    <div class="modal-dialog modal-lg" role="document">
                                                                        <div class="modal-content">
                                                                            <div class="modal-header">
                                                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                                    <span aria-hidden="true">&times;</span>
                                                                                </button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                                <img src="@string.Format("/User/ShowPicture/{0}", item.attachments[j].pictureID.ToString())" alt="An Error has Occured" style="max-height:350px" />
                                                                            </div>
                                                                            <div class="modal-footer">
                                                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            <td>@Html.DisplayFor(modelItem => item.attachments[j].notes)</td>
                                                            <td>@Html.DisplayFor(modelItem => item.attachments[j].created)</td>
                                                            @if (item.details.ticketStatus.ToString() == "Closed")
                                                            {
                                                                <td><button type="button" class="btn btn-primary" disabled>Unable to Edit</button></td>
                                                                <td><button type="button" class="btn btn-danger" disabled>Unable to Delete</button></td>
                                                            }
                                                            else
                                                            {
                                                                if (HttpContext.Current.Session["AdminStatus"].ToString() == "Manager" || HttpContext.Current.Session["AdminStatus"].ToString() == "Admin" || HttpContext.Current.Session["ID"].ToString() == item.attachments[j].uploaderID.ToString())
                                                                {
                                                                    <td>
                                                                        <button type="button" style="float:left; overflow:hidden" class="btn btn-primary" data-toggle="modal" data-target="#@("Edit" + item.attachments[j]._id)">Edit Attachment</button>
                                                                        @using (Html.BeginForm("EditAttachment", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                                                        {
                                                                            <div class="modal fade" id="@("Edit" + item.attachments[j]._id)" tabindex="-1" role="dialog" aria-labelledby="EditAttachment" aria-hidden="true">
                                                                                <div class="modal-dialog" role="document">
                                                                                    <div class="modal-content">
                                                                                        <div class="modal-header">
                                                                                            <h5 class="modal-title" id="exampleModalLabel">Edit Attachment</h5>
                                                                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                                                <span aria-hidden="true">&times;</span>
                                                                                            </button>
                                                                                        </div>
                                                                                        <div class="modal-body">
                                                                                            <h6>Select an image to Reupload</h6>
                                                                                            <div>
                                                                                                <input type="file" id="theFile" name="theFile" class="form-control" />
                                                                                            </div>
                                                                                            <hr>
                                                                                            <h6>Enter your note changes in the textbox below</h6>
                                                                                            @Html.TextArea("notesText", @item.attachments[j].notes, new { @class = "form-control", @placeholder = @item.attachments[j].notes })
                                                                                            @Html.Hidden("TicketID", item._id)
                                                                                            @Html.Hidden("attachmentID", item.attachments[j]._id)
                                                                                        </div>
                                                                                        <div class="modal-footer">
                                                                                            <button type="submit" style="line-height: 1;" class="btn btn-primary">Update</button>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td><button type="button" class="btn btn-primary" disabled>Unable to Edit</button></td>
                                                                }
                                                                if (HttpContext.Current.Session["AdminStatus"].ToString() == "Manager" || HttpContext.Current.Session["AdminStatus"].ToString() == "Admin" || HttpContext.Current.Session["ID"].ToString() == item.attachments[j].uploaderID.ToString())
                                                                {
                                                                    <td>
                                                                        <button type="button" style="float:left; overflow:hidden" class="btn btn-danger" data-toggle="modal" data-target="#@("Delete" + item.attachments[j]._id)">Delete Attachment</button>
                                                                        @using (Html.BeginForm("DeleteAttachment", "User", FormMethod.Post))
                                                                        {
                                                                            <div class="modal fade" id="@("Delete" + item.attachments[j]._id)" tabindex="-1" role="dialog" aria-labelledby="DeleteAttachment" aria-hidden="true">
                                                                                <div class="modal-dialog" role="document">
                                                                                    <div class="modal-content">
                                                                                        <div class="modal-header">
                                                                                            <h5 class="modal-title" id="exampleModalLabel">Delete Attachment</h5>
                                                                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                                                <span aria-hidden="true">&times;</span>
                                                                                            </button>
                                                                                        </div>
                                                                                        <div class="modal-body">
                                                                                            Are you sure you want to delete this comment? This action will delete the attachment permanently.
                                                                                            @Html.Hidden("TicketID", item._id)
                                                                                            @Html.Hidden("attachmentID", item.attachments[j]._id)
                                                                                        </div>
                                                                                        <div class="modal-footer">
                                                                                            <button type="submit" style="line-height: 1;" class="btn btn-primary">Delete</button>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td><button type="button" class="btn btn-danger" disabled>Unable to Delete</button></td>
                                                                }
                                                            }
                                                        </tr>
                                                    }

                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane fade" id="nav-histories" role="tabpanel" aria-labelledby="nav-contact-tab">
                                <div class="card-header py-3">
                                    <h6 class="m-0 font-weight-bold text-primary">Ticket History</h6>
                                    <h6>List of Ticket Detail changes in this ticket</h6>
                                </div>

                                <div class="card-body">
                                    <div class="table-responsive" max-width="100%">
                                        <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                            <thead>
                                                <tr>
                                                    <th>Editor</th>
                                                    <th>Date Changed</th>
                                                    <th>View Changes</th>
                                                    <th>Delete</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.Item1)
                                                {
                                                    for (int k = 0; k < item.histories.Count; k++)
                                                    {
                                                        <tr>
                                                            <td>@Html.DisplayFor(modelItem => item.histories[k].Editor)</td>
                                                            <td>@Html.DisplayFor(modelItem => item.histories[k].dateChanged)</td>
                                                            <td>
                                                                <!-- Button trigger modal -->
                                                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#@("ID" + k)">
                                                                    View Changes
                                                                </button>

                                                                <!-- Modal -->
                                                                <div class="modal fade" id="@("ID" + k)" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                                                    <div class="modal-dialog" role="document" style="width: 100%; max-width:100%; height : 100%; margin:0; padding: 50px;">
                                                                        <div class="modal-content" style="height:auto; min-height:100%; border-radius:0">
                                                                            <div class="modal-header">
                                                                                <h4 class="modal-title">Ticket History</h4>
                                                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                                    <span aria-hidden="true">&times;</span>
                                                                                </button>
                                                                            </div>
                                                                            <div class="modal-body">
                                                                                <p class="font-weight-light">Changes made to the Ticket is highlighted in Coral</p>
                                                                                <ul class="list-group" style="width: 50%; float: left;">
                                                                                    <li class="list-group-item list-group-item-dark">
                                                                                        @if (item.histories[k].oldValue.ticketTitle.ToString() != item.histories[k].newValue.ticketTitle.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Ticket Title: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.ticketTitle)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Ticket Title: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.ticketTitle)
                                                                                            </span>
                                                                                        }

                                                                                        @if (item.histories[k].oldValue.ticketDescription.ToString() != item.histories[k].newValue.ticketDescription.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Ticket Description: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.ticketDescription)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Ticket Description: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.ticketDescription)
                                                                                            </span>
                                                                                        }
                                                                                    </li>
                                                                                    <li class="list-group-item list-group-item-dark">
                                                                                        @if (item.histories[k].oldValue.assignDeveloper.ToString() != item.histories[k].newValue.assignDeveloper.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Assigned Developer: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.assignDeveloper)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Assigned Developer: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.assignDeveloper)
                                                                                            </span>
                                                                                        }

                                                                                        @if (item.histories[k].oldValue.submitter.ToString() != item.histories[k].newValue.submitter.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Submitter: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.submitter)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Submitter: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.submitter)
                                                                                            </span>
                                                                                        }
                                                                                    </li>
                                                                                    <li class="list-group-item list-group-item-dark">
                                                                                        @if (item.histories[k].oldValue.projectName.ToString() != item.histories[k].newValue.projectName.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Project Name: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.projectName)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Project Name: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.projectName)
                                                                                            </span>
                                                                                        }

                                                                                        @if (item.histories[k].oldValue.ticketPriority.ToString() != item.histories[k].newValue.ticketPriority.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Ticket Priority: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.ticketPriority)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Ticket Priority: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.ticketPriority)
                                                                                            </span>
                                                                                        }
                                                                                    </li>
                                                                                    <li class="list-group-item list-group-item-dark">
                                                                                        @if (item.histories[k].oldValue.ticketStatus.ToString() != item.histories[k].newValue.ticketStatus.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Ticket Status: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.ticketStatus)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Ticket Status: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.ticketStatus)
                                                                                            </span>
                                                                                        }

                                                                                        @if (item.histories[k].oldValue.ticketType.ToString() != item.histories[k].newValue.ticketType.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Ticket Type: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.ticketType)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Ticket Type: </strong> @Html.DisplayFor(modelitem => item.histories[k].oldValue.ticketType)
                                                                                            </span>
                                                                                        }
                                                                                    </li>
                                                                                </ul>

                                                                                <ul class="list-group" style="width: 50%; float: left;">
                                                                                    <li class="list-group-item list-group-item-dark">
                                                                                        @if (item.histories[k].oldValue.ticketTitle.ToString() != item.histories[k].newValue.ticketTitle.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Ticket Title: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.ticketTitle)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Ticket Title: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.ticketTitle)
                                                                                            </span>
                                                                                        }

                                                                                        @if (item.histories[k].oldValue.ticketDescription.ToString() != item.histories[k].newValue.ticketDescription.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Ticket Description: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.ticketDescription)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Ticket Description: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.ticketDescription)
                                                                                            </span>
                                                                                        }
                                                                                    </li>
                                                                                    <li class="list-group-item list-group-item-dark">
                                                                                        @if (item.histories[k].oldValue.assignDeveloper.ToString() != item.histories[k].newValue.assignDeveloper.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Assigned Developer: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.assignDeveloper)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Assigned Developer: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.assignDeveloper)
                                                                                            </span>
                                                                                        }

                                                                                        @if (item.histories[k].oldValue.submitter.ToString() != item.histories[k].newValue.submitter.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Submitter: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.submitter)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Submitter: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.submitter)
                                                                                            </span>
                                                                                        }
                                                                                    </li>
                                                                                    <li class="list-group-item list-group-item-dark">
                                                                                        @if (item.histories[k].oldValue.projectName.ToString() != item.histories[k].newValue.projectName.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Project Name: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.projectName)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Project Name: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.projectName)
                                                                                            </span>
                                                                                        }

                                                                                        @if (item.histories[k].oldValue.ticketPriority.ToString() != item.histories[k].newValue.ticketPriority.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Ticket Priority: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.ticketPriority)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Ticket Priority: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.ticketPriority)
                                                                                            </span>
                                                                                        }
                                                                                    </li>
                                                                                    <li class="list-group-item list-group-item-dark">
                                                                                        @if (item.histories[k].oldValue.ticketStatus.ToString() != item.histories[k].newValue.ticketStatus.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Ticket Status: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.ticketStatus)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Ticket Status: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.ticketStatus)
                                                                                            </span>
                                                                                        }

                                                                                        @if (item.histories[k].oldValue.ticketType.ToString() != item.histories[k].newValue.ticketType.ToString())
                                                                                        {
                                                                                            <span style="width: 50%; float: left; color: #FF6F61">
                                                                                                <strong>Ticket Type: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.ticketType)
                                                                                            </span>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span style="width: 50%; float: left;">
                                                                                                <strong>Ticket Type: </strong> @Html.DisplayFor(modelitem => item.histories[k].newValue.ticketType)
                                                                                            </span>
                                                                                        }
                                                                                    </li>
                                                                                </ul>
                                                                            </div>
                                                                            <div class="modal-footer">
                                                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </td>
                                                            @if (item.details.ticketStatus.ToString() == "Closed")
                                                            {
                                                                <td><button type="button" class="btn btn-danger" disabled>Unable to Delete</button></td>
                                                            }
                                                            else
                                                            {
                                                                if (HttpContext.Current.Session["AdminStatus"].ToString() == "Manager" || HttpContext.Current.Session["AdminStatus"].ToString() == "Admin")
                                                                {
                                                                    <td>
                                                                        <button type="button" style="float:left; overflow:hidden" class="btn btn-danger" data-toggle="modal" data-target="#@("Delete" + item.histories[k]._id)">Delete History</button>
                                                                        @using (Html.BeginForm("DeleteHistory", "User", FormMethod.Post))
                                                                        {
                                                                            <div class="modal fade" id="@("Delete" + item.histories[k]._id)" tabindex="-1" role="dialog" aria-labelledby="DeleteHistory" aria-hidden="true">
                                                                                <div class="modal-dialog" role="document">
                                                                                    <div class="modal-content">
                                                                                        <div class="modal-header">
                                                                                            <h5 class="modal-title" id="exampleModalLabel">Delete History</h5>
                                                                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                                                <span aria-hidden="true">&times;</span>
                                                                                            </button>
                                                                                        </div>
                                                                                        <div class="modal-body">
                                                                                            Are you sure you want to delete this ticket history? This action will delete the ticket history permanently.
                                                                                            @Html.Hidden("TicketID", item._id)
                                                                                            @Html.Hidden("historyID", item.histories[k]._id)
                                                                                        </div>
                                                                                        <div class="modal-footer">
                                                                                            <button type="submit" style="line-height: 1;" class="btn btn-primary">Delete</button>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td><button type="button" class="btn btn-primary" disabled>Unable to Delete</button></td>
                                                                }
                                                            }
                                                        </tr>
                                                    }
                                                }

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
                    <!-- /.container-fluid -->

                </div>
                <!-- End of Main Content -->
                <!-- Footer -->
                <footer class="sticky-footer bg-white">
                    <div class="container my-auto">
                        <div class="copyright text-center my-auto">
                            <span>Copyright &copy; Bug Tracker 2020</span>
                        </div>
                    </div>
                </footer>
                <!-- End of Footer -->

            </div>
            <!-- End of Content Wrapper -->

        </div>
        <!-- End of Page Wrapper -->
        <!-- Scroll to Top Button-->
        <a class="scroll-to-top rounded" href="#page-top">
            <i class="fas fa-angle-up"></i>
        </a>

        <!-- Logout Modal-->
        <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                        @using (Html.BeginForm("Logout", "User", FormMethod.Post))
                        {
                            <button type="submit" class="btn btn-primary">Log Out</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Bootstrap core JavaScript-->
    <script src="~/Content/vendor/jquery/jquery.min.js"></script>
    <script src="~/Content/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="~/Content/vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="~/Content/js/sb-admin-2.min.js"></script>

    <!-- Page level plugins -->
    <script src="~/Content/vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Content/vendor/datatables/dataTables.bootstrap4.min.js"></script>

    <!-- Page level custom scripts -->
    <script src="~/Content/js/demo/datatables-demo.js"></script>

    @foreach (var item in Model.Item1)
    {
        //https://forum.jquery.com/topic/how-to-dynamically-select-option-in-dropdown-menu
        <script>
            $(function () {
                $('[name=assignedDeveloper] option').filter(function () {
                    return ($(this).text() == "@item.details.assignDeveloper"); //To select assignedDeveloper
                }).prop('selected', true);
                $('[name=ticketStatus] option').filter(function () {
                    return ($(this).text() == "@item.details.ticketStatus"); //To select ticketStatus
                }).prop('selected', true);
                $('[name=ticketPriority] option').filter(function () {
                    return ($(this).text() == "@item.details.ticketPriority"); //To select ticketPriority
                }).prop('selected', true);
            })
        </script>
    }

    <script>
        $(document).ready(function () {
            $('table.table-bordered').DataTable();
            $(":submit").click(function () {
                $(this).prop('disabled', true);
            });
        });
    </script>
</body>

</html>
